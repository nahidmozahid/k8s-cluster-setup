# Set hostname (master node)
sudo hostnamectl set-hostname k8s-master

# Set hostname (worker node)
sudo hostnamectl set-hostname k8s-worker

# Update /etc/hosts on both nodes
sudo nano /etc/hosts

# Disable swap immediately On Both Master & Worker Nodes
sudo swapoff -a

# Permanently disable swap On Both Master & Worker Nodes
sudo sed -i '/ swap / s/^/#/' /etc/fstab

#Adjust Kernel Parameters:

cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
br_netfilter
EOF

cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOF

# Apply settings
sudo sysctl --system

#Install Container Runtime  on both master and worker nodes

sudo apt-get update && sudo apt-get install -y containerd

# Configure containerd
sudo mkdir -p /etc/containerd
sudo containerd config default | sudo tee /etc/containerd/config.toml

# Make sure SystemdCgroup = true
sudo nano /etc/containerd/config.toml
# Search for:
# SystemdCgroup = false
# Change to:
# SystemdCgroup = true

# Restart containerd
sudo systemctl restart containerd
sudo systemctl enable containerd

#Install kubeadm, kubelet, kubectl On Both Master & Worker Nodes

sudo apt-get update

# Add Kubernetes GPG key
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

# Add Kubernetes APT repository
echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list

sudo apt-get update

#Install Kubernetes Components and hold them

sudo apt-get install -y kubelet kubeadm kubectl

sudo apt-mark hold kubelet kubeadm kubectl

#Check It’s Working

kubeadm version
kubectl version --client
kubelet --version

#Initialize Kubernetes Cluster (Master Node Only)

sudo kubeadm init --pod-network-cidr=10.244.0.0/16

>> Save the kubeadm join command output carefully! You’ll need it for the worker node.

#Setup kubeconfig for kubectl

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

#Install Pod Network Add-on (Flannel Example)

kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

#Join Worker Node to Cluster
sudo kubeadm join 192.168.56.101:6443 --token <your-token> --discovery-token-ca-cert-hash sha256:<your-hash>

#to create new join token:
kubeadm token create --print-join-command
